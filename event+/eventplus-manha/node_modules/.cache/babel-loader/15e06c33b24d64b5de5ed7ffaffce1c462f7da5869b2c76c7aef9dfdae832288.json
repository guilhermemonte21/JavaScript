{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\6352573355\\\\Desktop\\\\event+\\\\eventplus-manha\\\\src\\\\pages\\\\EventosPage\\\\EventosPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Container from \"../../components/Container/Container\";\nimport Title from \"../../components/Title/Title\";\nimport MainContent from \"../../components/MainContent/MainContent\";\nimport ImageIllustrator from \"../../components/ImageIllustrator/ImageIllustrator\";\nimport { Input, Button, Select } from \"../../components/FormComponents/FormComponents\";\nimport Table from \"./TableEv/TableEv\";\nimport api, { eventsResource, eventsTypeResource, institutionResource } from \"../../Services/Service\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Notification from \"../../components/Notification/Notification\";\nimport { truncateDateFromDb } from \"../../Utils/stringFunctions\";\nimport eventoImage from \"../../assets/images/tipo-evento.svg\";\nimport \"./EventosPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventosPaage(props) {\n  _s();\n  //dados do form\n  const [nomeEvento, setNomeEvento] = useState(\"\"); //Nome do evento\n  const [descricaoEvento, setDescricaoEvento] = useState(\"\"); //Descrição do Evento\n  const [tipoEvento, setTipoEvento] = useState(\"\"); //código do tipo do Evento escolhido\n  const [dataEvento, setDFataEvento] = useState(\"\"); //Tipo do Evento escolhido ???\n  const [eventos, setEventos] = useState([]);\n  const [tiposEvento, setTiposEvento] = useState([]);\n  const [instituicao, setInstituicao] = useState();\n  const [frmEditData, setFrmEditData] = useState({}); //dados do formulário de edição de dados\n\n  //states condicionais\n  const [showSpinner, setShowSpinner] = useState(false);\n  //controla qual é a ação do submit, cadastrar ou atualizar\n  const [frmEdit, setFrmEdit] = useState(false);\n  const [notifyUser, setNotifyUser] = useState({}); //Componente Notification\n\n  //THE FUNCTIONS\n\n  // READ - LIFE CICLE - Carrega os tipos de evento no carregamento do componente\n  useEffect(() => {\n    async function loadEventsType() {\n      setShowSpinner(true);\n      try {\n        const promise = await api.get(eventsResource);\n        const promiseTipoEventos = await api.get(eventsTypeResource);\n        const promiseInstituicao = await api.get(institutionResource);\n        //só tem uma instituição neste projeto mas já fica preparado pra adicionar mais!\n        setEventos(promise.data);\n        const tpEventosModificado = [];\n        //retorno da api (array tipo de eventos)\n        promiseTipoEventos.data.forEach(event => {\n          tpEventosModificado.push({\n            value: event.idTipoEvento,\n            text: event.titulo\n          });\n        });\n        setTiposEvento(tpEventosModificado);\n        setInstituicao(promiseInstituicao.data[0].idInstituicao);\n        console.log(promiseTipoEventos.data);\n        // console.log(promiseInstituicao.data[0].idInstituicao);\n      } catch (error) {}\n      setShowSpinner(false);\n    }\n    loadEventsType();\n  }, [frmEdit]); //frmEdit[instituicao ]\n\n  // UPDATE\n  function editActionAbort() {\n    setFrmEdit(false);\n    setFrmEditData({});\n  }\n  // Exibe os dados na tela com o formulário de edição\n  async function showUpdateForm(evento) {\n    setFrmEditData(evento);\n    setFrmEdit(true);\n  }\n\n  // UPDATE ON API MONSTER BACKEND\n  async function handleUpdate(e) {\n    e.preventDefault();\n    setShowSpinner(true);\n    try {\n      const promise = await api.put(`${eventsResource}/${frmEditData.idEvento}`, {\n        nomeEvento: frmEditData.nomeEvento,\n        dataEvento: frmEditData.dataEvento,\n        descricao: frmEditData.descricao,\n        idInstituicao: frmEditData.idInstituicao,\n        idTipoEvento: frmEditData.idTipoEvento\n      });\n      if (promise.status === 204) {\n        setNotifyUser({\n          titleNote: \"Sucesso\",\n          textNote: `Atualizado com sucesso! (${frmEditData.nomeEvento})`,\n          imgIcon: \"success\",\n          imgAlt: \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n          showMessage: true\n        });\n        const buscaEventos = await api.get(eventsResource);\n        setEventos(buscaEventos.data); //aqui retorna um array, então de boa!\n      } else {\n        setNotifyUser({\n          titleNote: \"Erro\",\n          textNote: `Problemas ao atualizar, contate o admnistrador do sistema)`,\n          imgIcon: \"danger\",\n          imgAlt: \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n          showMessage: true\n        });\n      }\n    } catch (error) {\n      setNotifyUser({\n        titleNote: \"Erro\",\n        textNote: `Problemas ao atualizar os dados na tela ou no banco`,\n        imgIcon: \"danger\",\n        imgAlt: \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n        showMessage: true\n      });\n      throw new Error(\"O servidor bitolou, verifique se o Evento foi atualizado corretamente\");\n    }\n    setShowSpinner(false);\n    setFrmEditData({});\n    setFrmEdit(false);\n    return; // aqui como um preventDefault()\n  }\n\n  // DELETE\n  async function handleDelete(idElemento) {\n    if (!window.confirm(\"Confirma Exclusão?\")) {\n      return; //retorna a função sem executar o restante do código\n    }\n\n    setShowSpinner(true);\n    try {\n      const promise = await api.delete(`${eventsResource}/${idElemento}`);\n      if (promise.status === 204) {\n        setNotifyUser({\n          titleNote: \"Sucesso!\",\n          textNote: \"Evento excluído com sucesso!\",\n          imgIcon: \"danger\",\n          imgAlt: \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n          showMessage: true\n        });\n        const buscaEventos = await api.get(eventsResource);\n        // console.log(buscaEventos.data);\n        setEventos(buscaEventos.data); //aqui retorna um array, então de boa!\n      } else {\n        setNotifyUser({\n          titleNote: \"Erro\",\n          textNote: `O servidor bitolou, verifique se o Evento foi apagado corretamente`,\n          imgIcon: \"danger\",\n          imgAlt: \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n          showMessage: true\n        });\n        throw new Error(\"O servidor bitolou, verifique se o Evento foi apagado corretamente\");\n      }\n    } catch (error) {\n      setNotifyUser({\n        titleNote: \"Erro\",\n        textNote: `Problemas ao apagar`,\n        imgIcon: \"danger\",\n        imgAlt: \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n        showMessage: true\n      });\n      throw new Error(`Problemas ao apagar: ${error}`);\n    }\n    setShowSpinner(false);\n  }\n\n  //SUBMIT FORM - Cadastrar evento\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setShowSpinner(true);\n    // Validação dos campos\n    if (nomeEvento.trim().length === 0 || descricaoEvento.trim().length === 0 || tipoEvento.trim().length === 0 || dataEvento.trim().length === 0) {\n      setNotifyUser({\n        titleNote: \"Atenção\",\n        textNote: \"Preencha os campos corretamente\",\n        imgIcon: \"warning\",\n        imgAlt: \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n        showMessage: true\n      });\n      setShowSpinner(false);\n      return;\n    }\n\n    // console.log(\"teste\");\n    try {\n      // const promise = await api.post(`/Eventos`, {\n      await api.post(eventsResource, {\n        nomeEvento,\n        dataEvento,\n        descricao: descricaoEvento,\n        idInstituicao: instituicao,\n        //por enquanto chumbado\n        idTipoEvento: tipoEvento\n      });\n      // setFrmEditData({});//limpa os dados do formulário\n      const newListEvents = await api.get(eventsResource);\n      setEventos(newListEvents.data);\n      setNotifyUser({\n        titleNote: \"Sucesso\",\n        textNote: `Evento ( ${nomeEvento} ) cadastrado com sucesso!`,\n        imgIcon: \"success\",\n        imgAlt: \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n        showMessage: true\n      });\n      setNomeEvento(\"\");\n      setDescricaoEvento(\"\");\n      setTipoEvento(\"\");\n      setDFataEvento(\"\");\n    } catch (error) {\n      setNotifyUser({\n        titleNote: \"Erro\",\n        textNote: `Deu ruim ao cadastrar!!: ${error}`,\n        imgIcon: \"danger\",\n        imgAlt: \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n        showMessage: true\n      });\n    }\n    setShowSpinner(false);\n  }\n\n  /**\n   * Esta função faz um DE/PARA no array de tipos de eventos vindo do banco de dados.\n   * idInstituicao vira value\n   * titulo vira o texto\n   *\n   * @param {[{}]} arrEvents\n   * @returns array\n   */\n  function fromToEventType(arrEvents) {\n    // console.log(arrEvents);\n    if (arrEvents.length === 0) return [];\n    const arrAux = [];\n    arrEvents.forEach(event => {\n      arrAux.push({\n        value: event.idTipoEvento,\n        text: event.titulo\n      });\n    });\n    return arrAux;\n  }\n\n  // THE COMPONENT\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"cadastro-evento-section\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cadastro-evento__box\",\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              titleText: \"Eventos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ImageIllustrator, {\n              imageName: \"evento\",\n              imageRender: eventoImage,\n              altText: \"Imagem de Ilustrativa para o cadastro de tipos de eventos - duas pessoas construindo uma parte de um todo!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"ftipo-evento\",\n              onSubmit: frmEdit ? handleUpdate : handleSubmit,\n              children: !frmEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  required: true,\n                  id: \"nome\",\n                  name: \"nome\",\n                  placeholder: \"Nome\",\n                  value: nomeEvento,\n                  manipulationFunction: e => setNomeEvento(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  required: true,\n                  id: \"descricao\",\n                  name: \"descricao\",\n                  placeholder: \"Descri\\xE7\\xE3o\",\n                  value: descricaoEvento,\n                  manipulationFunction: e => setDescricaoEvento(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"tipo-evento\",\n                  name: \"tipo-evento\",\n                  required: true,\n                  options: tiposEvento // aqui o array dos tipos\n                  ,\n                  manipulationFunction: e => setTipoEvento(e.target.value) // aqui só a variável state\n                  ,\n                  defaultValue: tipoEvento\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"date\",\n                  required: true,\n                  id: \"dataEvento\",\n                  name: \"dataEvento\",\n                  placeholder: \"Data do Evento\",\n                  value: dataEvento,\n                  manipulationFunction: e => setDFataEvento(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  name: \"cadastrar\",\n                  id: \"cadastrar\",\n                  textButton: \"Cadastrar\",\n                  additionalClass: \"btn-cadastrar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  required: true,\n                  id: \"nome\",\n                  name: \"nome\",\n                  placeholder: \"Nome Evento\",\n                  value: frmEditData.nomeEvento,\n                  manipulationFunction: e => {\n                    setFrmEditData({\n                      ...frmEditData,\n                      nomeEvento: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  required: true,\n                  id: \"descricao\",\n                  name: \"descricao\",\n                  placeholder: \"Descri\\xE7\\xE3o\",\n                  value: frmEditData.descricao,\n                  manipulationFunction: e => {\n                    setFrmEditData({\n                      ...frmEditData,\n                      descricao: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"tipo-evento\",\n                  name: \"tipo-evento\",\n                  required: true,\n                  options: tiposEvento,\n                  defaultValue: frmEditData.idTipoEvento,\n                  manipulationFunction: e => {\n                    setFrmEditData({\n                      ...frmEditData,\n                      idTipoEvento: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"date\",\n                  required: true,\n                  id: \"dataEvento\",\n                  name: \"dataEvento\",\n                  placeholder: \"Data do Evento\",\n                  value: truncateDateFromDb(frmEditData.dataEvento)\n                  // value=\"2023-01-05\"\n                  ,\n                  manipulationFunction: e => {\n                    setFrmEditData({\n                      ...frmEditData,\n                      dataEvento: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"buttons-editbox\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    name: \"atualizar\",\n                    id: \"atualizar\",\n                    textButton: \"Atualizar\",\n                    additionalClass: \"button-component--middle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    name: \"cancelar\",\n                    id: \"cancelar\",\n                    textButton: \"Cancelar\",\n                    type: \"reset\",\n                    manipulationFunction: () => {\n                      editActionAbort();\n                    },\n                    additionalClass: \"button-component--middle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"lista-eventos-section\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            titleText: \"Lista de Eventos\",\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            dados: eventos,\n            fnDelete: handleDelete,\n            fnUpdate: showUpdateForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), showSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(Notification, {\n      ...notifyUser,\n      setNotifyUser: setNotifyUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(EventosPaage, \"tz1rOPLvXD5+vNsWWeMQ5H4c/QM=\");\n_c = EventosPaage;\nvar _c;\n$RefreshReg$(_c, \"EventosPaage\");","map":{"version":3,"names":["React","useEffect","useState","Container","Title","MainContent","ImageIllustrator","Input","Button","Select","Table","api","eventsResource","eventsTypeResource","institutionResource","Spinner","Notification","truncateDateFromDb","eventoImage","jsxDEV","_jsxDEV","Fragment","_Fragment","EventosPaage","props","_s","nomeEvento","setNomeEvento","descricaoEvento","setDescricaoEvento","tipoEvento","setTipoEvento","dataEvento","setDFataEvento","eventos","setEventos","tiposEvento","setTiposEvento","instituicao","setInstituicao","frmEditData","setFrmEditData","showSpinner","setShowSpinner","frmEdit","setFrmEdit","notifyUser","setNotifyUser","loadEventsType","promise","get","promiseTipoEventos","promiseInstituicao","data","tpEventosModificado","forEach","event","push","value","idTipoEvento","text","titulo","idInstituicao","console","log","error","editActionAbort","showUpdateForm","evento","handleUpdate","e","preventDefault","put","idEvento","descricao","status","titleNote","textNote","imgIcon","imgAlt","showMessage","buscaEventos","Error","handleDelete","idElemento","window","confirm","delete","handleSubmit","trim","length","post","newListEvents","fromToEventType","arrEvents","arrAux","children","className","titleText","fileName","_jsxFileName","lineNumber","columnNumber","imageName","imageRender","altText","onSubmit","type","required","id","name","placeholder","manipulationFunction","target","options","defaultValue","textButton","additionalClass","color","dados","fnDelete","fnUpdate","_c","$RefreshReg$"],"sources":["C:/Users/6352573355/Desktop/event+/eventplus-manha/src/pages/EventosPage/EventosPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Container from \"../../components/Container/Container\";\nimport Title from \"../../components/Title/Title\";\nimport MainContent from \"../../components/MainContent/MainContent\";\nimport ImageIllustrator from \"../../components/ImageIllustrator/ImageIllustrator\";\nimport {\n  Input,\n  Button,\n  Select,\n} from \"../../components/FormComponents/FormComponents\";\nimport Table from \"./TableEv/TableEv\";\nimport api, {\n  eventsResource,\n  eventsTypeResource,\n  institutionResource,\n} from \"../../Services/Service\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Notification from \"../../components/Notification/Notification\";\nimport { truncateDateFromDb } from \"../../Utils/stringFunctions\";\nimport eventoImage from \"../../assets/images/tipo-evento.svg\";\nimport \"./EventosPage.css\";\n\nexport default function EventosPaage(props) {\n  //dados do form\n  const [nomeEvento, setNomeEvento] = useState(\"\"); //Nome do evento\n  const [descricaoEvento, setDescricaoEvento] = useState(\"\"); //Descrição do Evento\n  const [tipoEvento, setTipoEvento] = useState(\"\"); //código do tipo do Evento escolhido\n  const [dataEvento, setDFataEvento] = useState(\"\"); //Tipo do Evento escolhido ???\n  const [eventos, setEventos] = useState([]);\n  const [tiposEvento, setTiposEvento] = useState([]);\n  const [instituicao, setInstituicao] = useState();\n  const [frmEditData, setFrmEditData] = useState({}); //dados do formulário de edição de dados\n\n  //states condicionais\n  const [showSpinner, setShowSpinner] = useState(false);\n  //controla qual é a ação do submit, cadastrar ou atualizar\n  const [frmEdit, setFrmEdit] = useState(false);\n  const [notifyUser, setNotifyUser] = useState({}); //Componente Notification\n\n  //THE FUNCTIONS\n\n  // READ - LIFE CICLE - Carrega os tipos de evento no carregamento do componente\n  useEffect(() => {\n    async function loadEventsType() {\n      setShowSpinner(true);\n\n      try {\n        const promise = await api.get(eventsResource);\n        const promiseTipoEventos = await api.get(eventsTypeResource);\n        const promiseInstituicao = await api.get(institutionResource);\n        //só tem uma instituição neste projeto mas já fica preparado pra adicionar mais!\n        setEventos(promise.data);\n\n        const tpEventosModificado = [];\n        //retorno da api (array tipo de eventos)\n        promiseTipoEventos.data.forEach((event) => {\n          tpEventosModificado.push({ value: event.idTipoEvento, text: event.titulo });\n        });\n\n        setTiposEvento(tpEventosModificado);\n        setInstituicao(promiseInstituicao.data[0].idInstituicao);\n        console.log(promiseTipoEventos.data);\n        // console.log(promiseInstituicao.data[0].idInstituicao);\n      } catch (error) {}\n      setShowSpinner(false);\n    }\n\n    loadEventsType();\n  }, [frmEdit]); //frmEdit[instituicao ]\n\n  // UPDATE\n  function editActionAbort() {\n    setFrmEdit(false);\n    setFrmEditData({});\n  }\n  // Exibe os dados na tela com o formulário de edição\n  async function showUpdateForm(evento) {\n    setFrmEditData(evento);\n    setFrmEdit(true);\n  }\n\n  // UPDATE ON API MONSTER BACKEND\n  async function handleUpdate(e) {\n    e.preventDefault();\n    setShowSpinner(true);\n\n    try {\n      const promise = await api.put(\n        `${eventsResource}/${frmEditData.idEvento}`,\n        {\n          nomeEvento: frmEditData.nomeEvento,\n          dataEvento: frmEditData.dataEvento,\n          descricao: frmEditData.descricao,\n          idInstituicao: frmEditData.idInstituicao,\n          idTipoEvento: frmEditData.idTipoEvento,\n        }\n      );\n\n      if (promise.status === 204) {\n        setNotifyUser({\n          titleNote: \"Sucesso\",\n          textNote: `Atualizado com sucesso! (${frmEditData.nomeEvento})`,\n          imgIcon: \"success\",\n          imgAlt:\n            \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n          showMessage: true,\n        });\n\n        const buscaEventos = await api.get(eventsResource);\n        setEventos(buscaEventos.data); //aqui retorna um array, então de boa!\n      } else {\n        setNotifyUser({\n          titleNote: \"Erro\",\n          textNote: `Problemas ao atualizar, contate o admnistrador do sistema)`,\n          imgIcon: \"danger\",\n          imgAlt:\n            \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n          showMessage: true,\n        });\n      }\n    } catch (error) {\n      setNotifyUser({\n        titleNote: \"Erro\",\n        textNote: `Problemas ao atualizar os dados na tela ou no banco`,\n        imgIcon: \"danger\",\n        imgAlt:\n          \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n        showMessage: true,\n      });\n\n      throw new Error(\n        \"O servidor bitolou, verifique se o Evento foi atualizado corretamente\"\n      );\n    }\n\n    setShowSpinner(false);\n    setFrmEditData({});\n    setFrmEdit(false);\n    return; // aqui como um preventDefault()\n  }\n\n  // DELETE\n  async function handleDelete(idElemento) {\n    if (!window.confirm(\"Confirma Exclusão?\")) {\n      return; //retorna a função sem executar o restante do código\n    }\n\n    setShowSpinner(true);\n    try {\n      const promise = await api.delete(`${eventsResource}/${idElemento}`);\n\n      if (promise.status === 204) {\n        setNotifyUser({\n          titleNote: \"Sucesso!\",\n          textNote: \"Evento excluído com sucesso!\",\n          imgIcon: \"danger\",\n          imgAlt:\n            \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n          showMessage: true,\n        });\n\n        const buscaEventos = await api.get(eventsResource);\n        // console.log(buscaEventos.data);\n        setEventos(buscaEventos.data); //aqui retorna um array, então de boa!\n      } else {\n        setNotifyUser({\n          titleNote: \"Erro\",\n          textNote: `O servidor bitolou, verifique se o Evento foi apagado corretamente`,\n          imgIcon: \"danger\",\n          imgAlt:\n            \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n          showMessage: true,\n        });\n        throw new Error(\n          \"O servidor bitolou, verifique se o Evento foi apagado corretamente\"\n        );\n      }\n    } catch (error) {\n      setNotifyUser({\n        titleNote: \"Erro\",\n        textNote: `Problemas ao apagar`,\n        imgIcon: \"danger\",\n        imgAlt:\n          \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n        showMessage: true,\n      });\n      throw new Error(`Problemas ao apagar: ${error}`);\n    }\n    setShowSpinner(false);\n  }\n\n  //SUBMIT FORM - Cadastrar evento\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setShowSpinner(true);\n    // Validação dos campos\n    if (\n      nomeEvento.trim().length === 0 ||\n      descricaoEvento.trim().length === 0 ||\n      tipoEvento.trim().length === 0 ||\n      dataEvento.trim().length === 0\n    ) {\n      setNotifyUser({\n        titleNote: \"Atenção\",\n        textNote: \"Preencha os campos corretamente\",\n        imgIcon: \"warning\",\n        imgAlt:\n          \"Imagem de ilustração de atenção. Mulher ao lado do símbolo de exclamação\",\n        showMessage: true,\n      });\n      setShowSpinner(false);\n      return;\n    }\n\n    // console.log(\"teste\");\n    try {\n      // const promise = await api.post(`/Eventos`, {\n      await api.post(eventsResource, {\n        nomeEvento,\n        dataEvento,\n        descricao: descricaoEvento,\n        idInstituicao: instituicao, //por enquanto chumbado\n        idTipoEvento: tipoEvento,\n      });\n      // setFrmEditData({});//limpa os dados do formulário\n      const newListEvents = await api.get(eventsResource);\n      setEventos(newListEvents.data);\n      setNotifyUser({\n        titleNote: \"Sucesso\",\n        textNote: `Evento ( ${nomeEvento} ) cadastrado com sucesso!`,\n        imgIcon: \"success\",\n        imgAlt:\n          \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n        showMessage: true,\n      });\n      setNomeEvento(\"\");\n      setDescricaoEvento(\"\");\n      setTipoEvento(\"\");\n      setDFataEvento(\"\");\n    } catch (error) {\n      setNotifyUser({\n        titleNote: \"Erro\",\n        textNote: `Deu ruim ao cadastrar!!: ${error}`,\n        imgIcon: \"danger\",\n        imgAlt:\n          \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n        showMessage: true,\n      });\n    }\n\n    setShowSpinner(false);\n  }\n\n  /**\n   * Esta função faz um DE/PARA no array de tipos de eventos vindo do banco de dados.\n   * idInstituicao vira value\n   * titulo vira o texto\n   *\n   * @param {[{}]} arrEvents\n   * @returns array\n   */\n  function fromToEventType(arrEvents) {\n    // console.log(arrEvents);\n    if (arrEvents.length === 0) return [];\n\n    const arrAux = [];\n\n    arrEvents.forEach((event) => {\n      arrAux.push({ value: event.idTipoEvento, text: event.titulo });\n    });\n\n    return arrAux;\n  }\n\n  // THE COMPONENT\n  return (\n    <>\n      <MainContent>\n        <section className=\"cadastro-evento-section\">\n          <Container>\n            <div className=\"cadastro-evento__box\">\n              <Title titleText={\"Eventos\"} />\n\n              <ImageIllustrator\n                imageName=\"evento\"\n                imageRender={eventoImage}\n                altText=\"Imagem de Ilustrativa para o cadastro de tipos de eventos - duas pessoas construindo uma parte de um todo!\"\n              />\n\n              <form\n                className=\"ftipo-evento\"\n                onSubmit={frmEdit ? handleUpdate : handleSubmit}\n              >\n                {/* cadastrar ou atualizar */}\n                {!frmEdit ? (\n                  <>\n                    {/* cadastrar */}\n                    {/* \n                      sugestão: trocar por um único formulário \n                      utilizando apenas frmEditData e formatação condicional para os botões\n                      ainda utilizando frmEdit\n                    */}\n                    <Input\n                      type=\"text\"\n                      required={true}\n                      id=\"nome\"\n                      name=\"nome\"\n                      placeholder=\"Nome\"\n                      value={nomeEvento}\n                      manipulationFunction={(e) =>\n                        setNomeEvento(e.target.value)\n                      }\n                    />\n\n                    <Input\n                      type=\"text\"\n                      required={true}\n                      id=\"descricao\"\n                      name=\"descricao\"\n                      placeholder=\"Descrição\"\n                      value={descricaoEvento}\n                      manipulationFunction={(e) =>\n                        setDescricaoEvento(e.target.value)\n                      }\n                    />\n\n                    <Select\n                      id=\"tipo-evento\"\n                      name=\"tipo-evento\"\n                      required={true}\n                      options={tiposEvento} // aqui o array dos tipos\n                      manipulationFunction={(e) =>\n                        setTipoEvento(e.target.value)\n                      } // aqui só a variável state\n                      defaultValue={tipoEvento}\n                    />\n\n                    <Input\n                      type=\"date\"\n                      required={true}\n                      id=\"dataEvento\"\n                      name=\"dataEvento\"\n                      placeholder=\"Data do Evento\"\n                      value={dataEvento}\n                      manipulationFunction={(e) =>\n                        setDFataEvento(e.target.value)\n                      }\n                    />\n\n                    <Button\n                      name=\"cadastrar\"\n                      id=\"cadastrar\"\n                      textButton=\"Cadastrar\"\n                      additionalClass=\"btn-cadastrar\"\n                    />\n                  </>\n                ) : (\n                  <>\n                    {/* editar */}\n                    <Input\n                      type=\"text\"\n                      required={true}\n                      id=\"nome\"\n                      name=\"nome\"\n                      placeholder=\"Nome Evento\"\n                      value={frmEditData.nomeEvento}\n                      manipulationFunction={(e) => {\n                        setFrmEditData({\n                          ...frmEditData,\n                          nomeEvento: e.target.value,\n                        });\n                      }}\n                    />\n                    <Input\n                      type=\"text\"\n                      required={true}\n                      id=\"descricao\"\n                      name=\"descricao\"\n                      placeholder=\"Descrição\"\n                      value={frmEditData.descricao}\n                      manipulationFunction={(e) => {\n                        setFrmEditData({\n                          ...frmEditData,\n                          descricao: e.target.value,\n                        });\n                      }}\n                    />\n\n                    <Select\n                      id=\"tipo-evento\"\n                      name=\"tipo-evento\"\n                      required={true}\n                      options={tiposEvento}\n                      defaultValue={frmEditData.idTipoEvento}\n                      manipulationFunction={(e) => {\n                        setFrmEditData({\n                          ...frmEditData,\n                          idTipoEvento: e.target.value,\n                        });\n                      }}\n                    />\n\n                    <Input\n                      type=\"date\"\n                      required={true}\n                      id=\"dataEvento\"\n                      name=\"dataEvento\"\n                      placeholder=\"Data do Evento\"\n                      value={truncateDateFromDb(frmEditData.dataEvento)}\n                      // value=\"2023-01-05\"\n                      manipulationFunction={(e) => {\n                        setFrmEditData({\n                          ...frmEditData,\n                          dataEvento: e.target.value,\n                        });\n                      }}\n                    />\n\n                    {/* botões de ação */}\n                    <div className=\"buttons-editbox\">\n                      <Button\n                        name=\"atualizar\"\n                        id=\"atualizar\"\n                        textButton=\"Atualizar\"\n                        additionalClass=\"button-component--middle\"\n                      />\n                      <Button\n                        name=\"cancelar\"\n                        id=\"cancelar\"\n                        textButton=\"Cancelar\"\n                        type=\"reset\"\n                        manipulationFunction={() => {\n                          editActionAbort();\n                        }}\n                        additionalClass=\"button-component--middle\"\n                      />\n                    </div>\n                  </>\n                )}\n              </form>\n            </div>\n          </Container>\n        </section>\n\n        {/* Listagem de tipo de eventos */}\n        <section className=\"lista-eventos-section\">\n          <Container>\n            <Title titleText={\"Lista de Eventos\"} color=\"white\" />\n            <Table\n              dados={eventos}\n              fnDelete={handleDelete}\n              fnUpdate={showUpdateForm}\n            />\n          </Container>\n        </section>\n      </MainContent>\n\n      {/* SPINNER -Feito com position */}\n      {showSpinner ? <Spinner /> : null}\n\n      {/* CARD NOTIFICATION */}\n      {<Notification {...notifyUser} setNotifyUser={setNotifyUser} />}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}